/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.xml.parser.sample;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;

import com.xml.parser.sample.pojo.ServiceBuilder;


public class Library
{

    public ServiceBuilder unmarshall(String fileName) throws JAXBException, IOException
    {
        JAXBContext context = JAXBContext.newInstance(ServiceBuilder.class);
        InputStream is = getFileAsIOStream("service.xml");
        return (ServiceBuilder) context.createUnmarshaller().unmarshal(is);
    }


    public File marshal(ServiceBuilder serviceRootElement, String destFileName) throws JAXBException, IOException
    {
        JAXBContext context = JAXBContext.newInstance(ServiceBuilder.class);
        Marshaller mar = context.createMarshaller();
        mar.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
        File file = new File(destFileName);
        mar.marshal(serviceRootElement, file);
        return file;
    }


    private InputStream getFileAsIOStream(final String fileName)
    {
        InputStream ioStream = this.getClass().getClassLoader().getResourceAsStream(fileName);
        if (ioStream == null)
        {
            throw new IllegalArgumentException(fileName + " is not found");
        }
        return ioStream;
    }
}
